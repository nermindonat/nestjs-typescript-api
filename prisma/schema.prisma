// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model User {
  id        Int        @id @default(autoincrement())
  email     String     @unique
  password  String
  name      String
  surname   String
  createdAt DateTime   @default(now()) @map("created_at")
  updatedAt DateTime?  @updatedAt @map("updated_at")
  deletedAt DateTime?  @map("deleted_at")
  favorites Favorite[]
  carts     Cart[]

  @@map("users")
}

model Cart {
  id        Int        @id @default(autoincrement())
  userId    Int?       @unique
  user      User?      @relation(fields: [userId], references: [id])
  createdAt DateTime   @default(now()) @map("created_at")
  updatedAt DateTime?  @updatedAt @map("updated_at")
  deletedAt DateTime?  @map("deleted_at")
  cartItems CartItem[]

  @@map("carts")
}

model CartItem {
  id               Int            @id @default(autoincrement())
  cartId           Int
  cart             Cart           @relation(fields: [cartId], references: [id], onUpdate: NoAction, onDelete: NoAction)
  productId        Int
  product          Product        @relation(fields: [productId], references: [id], onUpdate: NoAction, onDelete: NoAction)
  productVariantId Int            @map("product_variant_id")
  productVariant   ProductVariant @relation(fields: [productVariantId], references: [id])
  quantity         Int
  createdAt        DateTime       @default(now()) @map("created_at")
  updatedAt        DateTime?      @updatedAt @map("updated_at")
  deletedAt        DateTime?      @map("deleted_at")

  @@map("cart_items")
}

model Favorite {
  id        Int       @id @default(autoincrement())
  userId    Int       @map("user_id")
  user      User      @relation(fields: [userId], references: [id])
  productId Int       @map("product_id")
  product   Product   @relation(fields: [productId], references: [id])
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  @@unique([userId, productId])
  @@map("favorites")
}

model Product {
  id              Int              @id @default(autoincrement())
  name            String
  description     String?
  price           Float
  image           String?
  productVariants ProductVariant[]
  favorites       Favorite[]
  cartItems       CartItem[]

  @@map("products")
}

model Variant {
  id     Int            @id @default(autoincrement())
  name   String
  values VariantValue[]

  @@map("variant")
}

model VariantValue {
  id              Int              @id @default(autoincrement())
  variantId       Int              @map("variant_id")
  variant         Variant          @relation(fields: [variantId], references: [id])
  value           String
  productVariants ProductVariant[]

  @@map("variant_value")
}

model ProductVariant {
  id             Int          @id @default(autoincrement())
  productId      Int          @map("product_id")
  product        Product      @relation(fields: [productId], references: [id])
  variantValueId Int          @map("variant_value_id")
  variantValue   VariantValue @relation(fields: [variantValueId], references: [id])
  cartItems      CartItem[]

  @@map("product_variant")
}
